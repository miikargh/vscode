// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "alt+cmd+8",
        "command": "editor.action.marker.nextInFiles",
        "when": "editorFocus"
    },
    {
        "key": "f8",
        "command": "-editor.action.marker.nextInFiles",
        "when": "editorFocus"
    },
    {
        "key": "alt+cmd+9",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "tab",
        "command": "extension.vim_tab",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
      },
      {
        "key": "tab",
        "command": "-extension.vim_tab",
        "when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
      },
      {
        "key": "x",
        "command": "magit.discard-at-point",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "key": "k",
        "command": "-magit.discard-at-point"
      },
      {
        "key": "-",
        "command": "magit.reverse-at-point",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "key": "v",
        "command": "-magit.reverse-at-point"
      },
      {
        "key": "shift+-",
        "command": "magit.reverting",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "key": "shift+v",
        "command": "-magit.reverting"
      },
      {
        "key": "shift+o",
        "command": "magit.resetting",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "key": "shift+x",
        "command": "-magit.resetting"
      },
      {
        "key": "x",
        "command": "-magit.reset-mixed"
      },
      {
        "key": "ctrl+u x",
        "command": "-magit.reset-hard"
      },
      // Better menu navigation
      {
        "key": "cmd+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetVisible"
      },
      {
        "key": "cmd+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetVisible"
      },
      {
        "key": "cmd+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
      },
      {
        "key": "cmd+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
      },
      // Better search
      {
        "key": "/",
        "command": "actions.find",
        "when": "editorFocus && editorIsOpen && vim.mode == 'Normal'"
      },
      {
        "key": "cmd+j",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus && findInputFocussed"
      },
      {
        "key": "cmd+k",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus && findInputFocussed"
      },
      {
        "key": "cmd+j",
        "command": "-workbench.action.togglePanel"
      }
]